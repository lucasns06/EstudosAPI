// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TarefasApi.Data;

#nullable disable

namespace TarefasApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241209005328_MigracaoUsuarioChange")]
    partial class MigracaoUsuarioChange
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TarefasApi.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TB_CATEGORIAS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Matematica"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Fisica"
                        });
                });

            modelBuilder.Entity("TarefasApi.Models.Tarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<bool>("Completo")
                        .HasColumnType("bit");

                    b.Property<string>("DataTermino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Prioridade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("TB_TAREFAS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            Completo = false,
                            DataTermino = "05/10",
                            Nome = "Estudar Matemática",
                            Prioridade = 2
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 2,
                            Completo = false,
                            DataTermino = "11/10",
                            Nome = "Revisar Física",
                            Prioridade = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 1,
                            Completo = false,
                            DataTermino = "28/11",
                            Nome = "Regra de três",
                            Prioridade = 0
                        });
                });

            modelBuilder.Entity("TarefasApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Jogador");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "seuEmail@gmail.com",
                            Latitude = -23.520024100000001,
                            Longitude = -46.596497999999997,
                            PasswordHash = new byte[] { 229, 221, 115, 220, 15, 192, 49, 66, 4, 65, 16, 186, 252, 205, 44, 144, 25, 158, 176, 141, 31, 140, 190, 177, 117, 65, 188, 95, 78, 13, 10, 123, 177, 141, 92, 184, 86, 146, 222, 229, 1, 214, 25, 27, 205, 94, 195, 89, 230, 139, 181, 83, 254, 12, 249, 64, 222, 168, 115, 156, 191, 65, 184, 108 },
                            PasswordSalt = new byte[] { 233, 83, 210, 194, 8, 157, 52, 130, 28, 103, 60, 228, 178, 115, 184, 190, 254, 18, 107, 253, 116, 53, 229, 114, 180, 0, 28, 218, 122, 160, 31, 182, 137, 146, 176, 100, 82, 210, 86, 102, 124, 15, 102, 87, 119, 164, 20, 158, 150, 208, 165, 93, 253, 250, 187, 209, 183, 134, 63, 137, 145, 23, 98, 110, 219, 174, 20, 149, 234, 171, 188, 132, 26, 207, 93, 111, 172, 233, 148, 79, 98, 212, 63, 90, 111, 163, 168, 161, 204, 16, 68, 3, 83, 232, 120, 218, 179, 131, 128, 99, 31, 127, 90, 42, 232, 234, 95, 224, 125, 43, 205, 83, 4, 135, 228, 162, 103, 150, 30, 224, 81, 168, 10, 208, 124, 181, 28, 6 },
                            Perfil = "Admin",
                            Username = "UsuarioAdmin"
                        });
                });

            modelBuilder.Entity("TarefasApi.Models.Categoria", b =>
                {
                    b.HasOne("TarefasApi.Models.Usuario", "Usuario")
                        .WithMany("Categorias")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TarefasApi.Models.Tarefa", b =>
                {
                    b.HasOne("TarefasApi.Models.Categoria", "Categoria")
                        .WithMany("Tarefas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("TarefasApi.Models.Categoria", b =>
                {
                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("TarefasApi.Models.Usuario", b =>
                {
                    b.Navigation("Categorias");
                });
#pragma warning restore 612, 618
        }
    }
}
